{"version":3,"file":"static/js/219.662a1673.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/Cast/Cast.js","components/pages/HomePage.styled.js","components/services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const CastList = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 40px;\n`;\n\nexport const CastListItem = styled.li`\n  flex-basis: calc(100% - 40px * 3) / 4;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  border: 4px solid #2c5f63;\n  border-radius: 8px;\n`;\n\nexport const CastCardFooter = styled.div`\n  padding-top: 5px;\n  padding-bottom: 5px;\n  padding-left: 8px;\n  padding-right: 8px;\n  max-width: 185px;\n`;\n\nexport const CastText = styled.p`\n  max-width: 185px;\n`;\n","import { useParams } from 'react-router-dom';\nimport { fetchCastById } from '../services/api';\nimport { useState, useEffect } from 'react';\nimport {\n  CastCardFooter,\n  CastList,\n  CastListItem,\n  CastText,\n} from './Cast.styled';\nimport { Loader } from 'components/Loader/Loader';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { ReviesNotification } from '../pages/HomePage.styled';\n\nconst defaultImg =\n  'https://png.pngitem.com/pimgs/s/508-5087257_clip-art-hd-png-download.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [actors, setActors] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    const getActorsList = async () => {\n      try {\n        setLoading(true);\n        setError(false);\n        const { cast } = await fetchCastById(movieId);\n        setActors(cast);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getActorsList();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      {error &&\n        !loading &&\n        toast.error('Something went wrong, please try reloading the page', {\n          duration: 5000,\n        })}\n      {actors.length > 0 ? (\n        <CastList>\n          {actors.map(({ profile_path, name, character, id }) => {\n            return (\n              <CastListItem key={id}>\n                <div>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w185/${profile_path}`\n                        : defaultImg\n                    }\n                    alt={name}\n                    width={185}\n                    height={278}\n                  />\n                </div>\n                <CastCardFooter>\n                  <CastText>{name}</CastText>\n                  <CastText>\n                    Character: {character ? character : 'not mentioned'}\n                  </CastText>\n                </CastCardFooter>\n              </CastListItem>\n            );\n          })}\n        </CastList>\n      ) : (\n        <ReviesNotification>\n          The list of actors is temporarily empty for this movie\n        </ReviesNotification>\n      )}\n      <Toaster position=\"top-right\" />\n    </>\n  );\n};\n\nexport default Cast;\n","import styled from 'styled-components';\nexport const HomeTitle = styled.h2`\n  margin-bottom: 74px;\n  color: #3a415c;\n  font-family: 'Ubuntu', sans-serif;\n  font-size: 50px;\n  font-style: normal;\n  font-weight: 500;\n  line-height: 1.2;\n`;\n\nexport const ReviesNotification = styled(HomeTitle)`\n  margin-bottom: 0;\n  font-size: 32px;\n`;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '0cb95811155cbfd6f5d763048644bd55';\n\nexport const fetchTrendingMovies = async () => {\n  const response = await axios.get(\n    `/trending/movie/day?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMovieDetailsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${Number(movieId)}?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const fetchCastById = async movieId => {\n  const response = await axios.get(\n    `/movie/${Number(movieId)}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchReviewsById = async movieId => {\n  const response = await axios.get(\n    `/movie/${Number(movieId)}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const response = await axios.get(\n    `/search/movie?api_key=${API_KEY}&query=${query}&include_adult=true&language=en-US`\n  );\n  return response.data;\n};\n"],"names":["CastList","styled","_templateObject","_taggedTemplateLiteral","CastListItem","_templateObject2","CastCardFooter","_templateObject3","CastText","_templateObject4","movieId","useParams","_useState","useState","_useState2","_slicedToArray","actors","setActors","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","getActorsList","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchCastById","cast","_context","prev","next","fetchCastById","sent","t0","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","toast","duration","length","map","_ref2","profile_path","name","character","id","src","concat","alt","width","height","ReviesNotification","Toaster","position","HomeTitle","axios","API_KEY","fetchTrendingMovies","response","abrupt","data","fetchMovieDetailsById","_callee2","_context2","Number","_x","_ref3","_callee3","_context3","_x2","fetchReviewsById","_ref4","_callee4","_context4","_x3","fetchMoviesByQuery","_ref5","_callee5","query","_context5","_x4"],"sourceRoot":""}